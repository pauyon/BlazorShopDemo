@inject ICategoryService CategoryService
@inject ILocalStorageService LocalStorageService
@inject AuthenticationStateProvider AuthenticationStateProvider

<MudNavMenu>
    <MudNavLink Href="/" Match="NavLinkMatch.All">Home</MudNavLink>
    <MudNavGroup Title="Categories" Expanded="true">
        @foreach (var category in CategoryService.Categories)
        {
            @*<span class="oi oi-@category.Icon" aria-hidden="true"></span>*@
            <MudNavLink Href="@category.Url" Match="NavLinkMatch.Prefix">@category.Name</MudNavLink>
        }
    </MudNavGroup>
    <AuthorizeView>
        <NotAuthorized>
            <MudNavLink Href="/login" Match="NavLinkMatch.Prefix">Login</MudNavLink>
        </NotAuthorized>
        <Authorized>
            <MudNavLink Href="/logout" @onclick="Logout" Match="NavLinkMatch.Prefix">Logout</MudNavLink>
        </Authorized>
    </AuthorizeView>
</MudNavMenu>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        await CategoryService.GetCategories();
    }

    private async void Logout()
    {
        await LocalStorageService.RemoveItemAsync("username");
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
    }
}
