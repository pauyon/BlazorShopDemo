@page "/categories"
@page "/{CategoryUrl}"
@attribute [Authorize(Roles = "Administrator,User")]

@inject ICategoryService CategoryService
@inject IProductService ProductService
@inject ISyncLocalStorageService LocalStorageService
@inject IStatsService StatsService

@if (_category != null)
{
    <div class="card shadow mb-4">
        <div class="card-body">
            <h1>Welcome to the @_category.Name section!</h1>
        </div>
    </div>
    <ProductList />
}
else
{
    <AuthorizeView>
        <NotAuthorized>
            <div class="card shadow mb-4">
                <div class="card-body">
                    <h1>Welcome to my store!</h1>
                </div>
            </div>
        </NotAuthorized>
        <Authorized>
            <h1>Welcome back, @_user!</h1>
        </Authorized>
    </AuthorizeView>
    <ProductList />
}

@code 
{
    [Parameter]
    public string? CategoryUrl { get; set; }

    private Category? _category;
    private string _user;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        var authState = await authenticationState;

        if (authState != null && authState.User.Identity.IsAuthenticated)
        {
            _user = authState.User.Identity.Name;

            await ProductService.LoadProducts(CategoryUrl);

            if (CategoryUrl != null)
            {
                _category = CategoryService.Categories.FirstOrDefault(c => c.Url.ToLower().Equals(CategoryUrl.ToLower()));
            }
            else
            {
                _category = null;
            }

            await StatsService.IncrementVisists();
            await StatsService.GetVisits();
        }
    }
}