@inject IProductService ProductService
@implements IDisposable

<MudGrid>
    @foreach(var product in ProductService.Products)
    {
        <MudItem xs="12" lg="2">
            <MudCard Elevation="5">
                <MudCardMedia Image="@product.Image" Height="400" />
                <MudCardContent>
                    <MudText Typo="Typo.h6">@product.Title</MudText>
                    <MudText Typo="Typo.body2">@GetPriceText(product)</MudText>
                </MudCardContent>
                <MudCardActions>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Href="@($"/product/{@product.Id}")">View</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    }
</MudGrid>

@code {

    protected override void OnInitialized()
    {
        ProductService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        ProductService.OnChange -= StateHasChanged;
    }

    private string GetPriceText(Product product)
    {
        var variants = product.Variants;

        if (variants.Count == 0) return string.Empty;
        if (variants.Count == 1) return $"${variants.First().Price}";

        decimal minPrice = variants.Min(v => v.Price);
        return $"Starting at ${minPrice}";
    }
}
